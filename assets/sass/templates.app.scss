/*-------------------
	  Backgrounds
--------------------*/

.bg {		
	@keyframes bg-color--dark {
		0% 		{background-color: $blue;}
		50% 	{background-color: $black;}
		100%	{background-color: $blue;}
	}
	
	&--home {
		background-color: $blue;
	}
	
	&--work {
		background-color: $pinkish;
	}
	
	&--about {
		background-color: $blue;
	}
	
	&--ns {
		background-color: $ns-yellow;
	}
	
	&--wn {
		background-color: $wn-blue;
	}
	
	&--ar {
		background-color: $ar-brown;
	}
	
	&--cg {
		background-color: $cg-black;
	}
}



/*-------------------
		Lines
--------------------*/

.lines {
	display: flex;
	@extend %fixed-full-bg;
	
	&__line {
		display: block;
		position: relative;
		height: 0;
		width: 20%;
		border-left: $line;
		animation-fill-mode: both;
		animation-timing-function: $ease;
		animation-name: scale-height;
		
		span {
			position: absolute;
			width: 0;
			height: 100%;
			opacity: 0;
			background-color: $pinkish;
		}
		
		@keyframes scale-height {
			0% {
				height: 0;
				border-left: 1px solid rgba($pinkish, 0.8);
			}
			100% {
				height: 100%;
				border-left: $line;
			}
		}

		@for $i from 1 through 5 {
			&:nth-child(#{$i}) {
				animation-duration: 220ms + ($i * 80);
				animation-delay: 600ms + ($i * 40);
				
				span {
					transition: all (200ms + ($i * 80)) $ease;
					transition-delay: ($i * 40ms);
				}
			}
		}
		
		&.is-active {			
			span {
				opacity: 0.3;
				width: 100%;
			}
		}
	}
}
	
	
	
/*-------------------
		Intro
--------------------*/

.intro {
	justify-content: center;
	width: 100%;
	height: 100%;
	
	@media (min-width: $md) {
		display: flex;
		position: absolute;
	}
	
	&__container {
		max-width: $text-container-s;
		align-self: center;
		padding: $double-space;
		padding-top: $double-space + $navbar-height;
		@media (min-width: $md) {
			padding-top: $double-space;
		}
	}
	
	&__title {
		margin-bottom: $triple-space;	
	}
	
	&__description {
		margin: 0 0 $double-space 0;
		@media (min-width: $md) {
			margin: 0;
		}
	}
	
	&--detail {
		.intro__container {
			max-width: $text-container-s;
			@media (min-width: $lg) {
				max-width: $text-container-m;
			}
		}
		
		.intro__title {
			margin-bottom: $double-space;
		}
	}
	
	&--about {
		position: static;
		@media (min-width: $md) {
			padding-top: 200px;
		}
		
		.intro__container {
			max-width: $text-container-m;
			@media (min-width: $lg) {
				max-width: $text-container-l;
				margin-bottom: 90px;
			}
		}
		
		.intro__description {
			font-size: calculate-rem($txt-l);
			font-weight: bold;
			line-height: 1.3;
			margin-bottom: $double-space;
			@media (min-width: $md) {
				font-size: calculate-rem($txt-xxxl);
				margin-bottom: $quadruple-space;
			}
			
			&--small {
				font-weight: 200;
				line-height: 1.5;
				font-size: calculate-rem($txt-m);
				@media (min-width: $md) {
					font-size: calculate-rem($txt-xl);
				}
			}
		}
	}
}

/*-------------------
	    About
--------------------*/

.about {
	&__heading {
		margin-bottom: $triple-space;
		@include font-style(80px, 800, 1);
		@media (min-width: $sm) {
			font-size: calculate-rem(120px);
		}
		@media (min-width: $md) {
			margin-bottom: 90px;
			font-size: calculate-rem(160px);
		}
		@media (min-width: 1500px) {
			font-size: calculate-rem(200px);
		}
	}
	
	&__img {
		margin-bottom: $double-space;
	}
}


/*-------------------
	 Transitions
--------------------*/

.tr {
	transition: all 400ms $ease;
	
	&--fade-in {
		opacity: 0;
		
		&.is-active {
			opacity: 1;
		}
	}
	
	&--fade-in-up {
		opacity: 0;
		transform: translate3d(0, 100px, 0);
		
		&.is-active {
			opacity: 1;
			transform: none;
		}
	}
	
	&--scale-in {
		transition: all 500ms $ease;
		opacity: 0;
		transform: scale(0.98);
		
		&.is-active {
			opacity: 1;
			transform: none;
		}
	}
}

.tr-stag {
	@for $i from 1 through 5 {
		&:nth-child(#{$i}) {
			opacity: 0;
			transform: translate3d(0, (20px + ($i * 10)), 0);
			transition: all (300ms + ($i * 100)) $ease;
			
			&.is-active {
				opacity: 1;
				transform: none;
			}
			
			&--delay {
				transition-delay: ($i * 50ms);
			}
		}
	}
	
	&--delay {
		@for $i from 1 through 5 {
			&:nth-child(#{$i}) {
				transition-delay: ($i * 80ms);
			}
		}
	}
}