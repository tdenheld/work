/*-------------------
				Mixins
--------------------*/

@mixin clearfix() {

	&:before,
	&:after {
		content: " "; // 1
		display: table; // 2
	}

	&:after {
		clear: both;
	}
}



// font
// ------------------------------

// convert px to rem
@function calculate-rem($size) {
	$remSize: $size / $font-size-base;
	@return #{$remSize}rem;
}

// set font style
@mixin font-style($size, $weight, $factor) {
	font-weight: $weight;
	font-size: calculate-rem($size);
	line-height: $factor;
}

@mixin smooth-font() {
	font-smoothing: antialiased;
	-webkit-font-smoothing: antialiased;
	-moz-font-smoothing: antialiased;
	-o-font-smoothing: antialiased;
	-ms-font-smoothing: antialiased;
}



// media queries
// ------------------------------
@mixin xs { @media (min-width: $xs) { @content; }} 
@mixin sm { @media (min-width: $sm) { @content; }}
@mixin md { @media (min-width: $md) { @content; }}
@mixin lg { @media (min-width: $lg) { @content; }}

// max-width breakpoints
@mixin xs-max { @media (max-width: $xs) { @content; }}
@mixin sm-max { @media (max-width: $sm) { @content; }}
@mixin md-max { @media (max-width: $md) { @content; }}
@mixin lg-max { @media (max-width: $lg) { @content; }}

// exclusive breakpoints (min-max)
@mixin sm-ex { @media (min-width: $sm) and (max-width: $md) { @content; }}
@mixin md-ex { @media (min-width: $md) and (max-width: $lg) { @content; }}



// spacers
// ------------------------------
@mixin spacer($factor, $property) {
	$size: $space / 2; // 6 pixels 
    
    @if $factor == 0 {
	    #{$property}: $factor;
    } @else {
	    #{$property}: $size * $factor;
    }
}



// lay-out
// ------------------------------
@mixin full($p) {
	position: $p;
	top: 0;
	bottom: 0;
	left: 0;
	right: 0;
	height: 100%;
	width: 100%;
}

@mixin bg($s) {
	background-position: center center;
	background-repeat: no-repeat;
	background-size: $s;
}